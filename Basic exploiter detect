-- Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local SpeedLimit = 30
local HeightLimit = 5
local FlyDuration = 2

-- Tables to track detected players and fly time
local detectedPlayers = {}
local flyingPlayers = {}
local flyStartTime = {}
local displayedPlayers = {}
local isOutputVisible = true -- Track output visibility

-- GUI Elements for displaying warnings
local screenGui = Instance.new("ScreenGui", Players.LocalPlayer:WaitForChild("PlayerGui"))

local outputLabel = Instance.new("TextLabel", screenGui)
outputLabel.Size = UDim2.new(0, 200, 0, 100)
outputLabel.Position = UDim2.new(0.95, -200, 0.05, 1) -- Position in the top right corner
outputLabel.BackgroundTransparency = 0
outputLabel.TextColor3 = Color3.new(1, 0, 0)
outputLabel.TextSize = 10
outputLabel.TextWrapped = true
outputLabel.Text = ""
outputLabel.Visible = true

-- Toggle button to show/hide output label
local toggleButton = Instance.new("TextButton", screenGui)
toggleButton.Size = UDim2.new(0, 100, 0, 30)
toggleButton.Position = UDim2.new(0.95, -100, 0.15, 0) -- Positioned below the output label
toggleButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.TextSize = 14
toggleButton.Text = "Toggle Alerts"
toggleButton.Visible = true

-- Toggle output label visibility
toggleButton.MouseButton1Click:Connect(function()
    isOutputVisible = not isOutputVisible
    outputLabel.Visible = isOutputVisible
end)

-- Function to create UI for highlighting suspected exploiters
local function createHighlight(player)
    if not player.Character then return end

    if not player.Character:FindFirstChild("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Adornee = player.Character
        highlight.FillColor = Color3.new(1, 0, 0)
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0
        highlight.Parent = player.Character

        local playerGui = Players.LocalPlayer:WaitForChild("PlayerGui")
        local textLabel = Instance.new("TextLabel", playerGui)
        textLabel.Size = UDim2.new(0, 200, 0, 50)
        textLabel.Position = UDim2.new(0.5, -100, 0, -60)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.new(1, 0, 0)
        textLabel.TextSize = 24
        textLabel.Text = player.Name .. "\n" .. player.DisplayName
        textLabel.TextWrapped = true
        textLabel.Visible = true

        RunService.RenderStepped:Connect(function()
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local head = player.Character:FindFirstChild("Head")
                if head then
                    local screenPosition, onScreen = workspace.CurrentCamera:WorldToScreenPoint(head.Position + Vector3.new(0, 1.5, 0))
                    if onScreen then
                        textLabel.Position = UDim2.new(0, screenPosition.X - 100, 0, screenPosition.Y - 50)
                    else
                        textLabel.Visible = false
                    end
                end
            else
                textLabel.Visible = false
            end
        end)
    end
end

-- Function to update the output label on the screen
local function updateOutput(player, message)
    if not displayedPlayers[player] then
        outputLabel.Text = outputLabel.Text .. message .. "\n"
        local lines = outputLabel.Text:split("\n")
        if #lines > 10 then
            outputLabel.Text = table.concat(lines, "\n", #lines - 9, #lines)
        end
        displayedPlayers[player] = true
    end
end

-- Function to check player speed
local function checkSpeed(player)
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local root = player.Character.HumanoidRootPart
        local speed = (root.Velocity).Magnitude
        local humanoid = player.Character:FindFirstChild("Humanoid")

        local onGround = root.Position.Y <= HeightLimit

        if speed > SpeedLimit and onGround then
            if not detectedPlayers[player] then
                local message = "Potential speed exploiter detected: " .. player.Name
                warn(message)
                updateOutput(player, message)
                createHighlight(player)
                detectedPlayers[player] = true
            end
        elseif speed <= SpeedLimit and detectedPlayers[player] then
            detectedPlayers[player] = false
            displayedPlayers[player] = nil
            if player.Character:FindFirstChild("Highlight") then
                player.Character.Highlight:Destroy()
            end
        end
    end
end

-- Function to check if a player is flying
local function checkFlying(player)
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local root = player.Character.HumanoidRootPart
        local ray = Ray.new(root.Position, Vector3.new(0, -HeightLimit, 0))
        local part, position = workspace:FindPartOnRay(ray, player.Character)

        if not part then
            if not flyStartTime[player] then
                flyStartTime[player] = tick()
            elseif tick() - flyStartTime[player] > FlyDuration and not flyingPlayers[player] then
                local humanoid = player.Character:FindFirstChild("Humanoid")
                if humanoid and humanoid:GetState() ~= Enum.HumanoidStateType.Jumping and humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then
                    local message = "Potential flying exploiter detected: " .. player.Name
                    warn(message)
                    updateOutput(player, message)
                    createHighlight(player)
                    flyingPlayers[player] = true
                end
            end
        else
            flyStartTime[player] = nil
            flyingPlayers[player] = nil
            displayedPlayers[player] = nil
        end
    end
end

-- Connect detection to RunService
RunService.Heartbeat:Connect(function()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            checkSpeed(player)
            checkFlying(player)
        end
    end
end)

print("Exploit detection script initialized.")
